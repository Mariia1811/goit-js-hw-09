{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEeC,SAASC,cAAc,SAC/BC,iBAAiB,UAKxB,SAAsBC,GACpBA,EAAEC,iBAEF,IAAMC,EAASF,EAAEG,cAAcC,SAASF,OAAOG,MACzCC,GAAaN,EAAEG,cAAcC,SAASG,KAAKF,MACjDG,GAASR,EAAEG,cAAcC,SAASK,MAAMJ,MAExC,IAAK,IAAIK,EAAI,EAAGA,EAAIR,EAAQQ,IAC1BC,EAAc,CAAEC,SAAAC,EAAUJ,MAAAD,IACvBM,MAAK,SAAAC,GACJpB,EAAAqB,OAAOC,QAAQF,E,IAEhBG,OAAM,SAAAC,GACLxB,EAAAqB,OAAOI,QAAQD,E,IAEnBX,GAASF,EACTO,GAAY,EAEdL,EAAQ,EACRK,EAAW,C,IAtBb,IAAIL,EAAQ,EACRK,EAAW,EAwBf,SAASF,EAAcU,G,IAAEC,EAAFD,EAAET,SAAUW,EAAZF,EAAYZ,MACjC,OAAO,IAAIe,SAAQ,SAACT,EAASI,GAC3B,IAAMM,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,GACFV,EAAQ,uBAAwCc,OAAfP,EAAS,QAAYO,OAANN,EAAM,OAEtDJ,EAAK,sBAAqCU,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,GACjDA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onFormSubmit);\n\nlet delay = 0;\nlet position = 1;\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  \n  const amount = e.currentTarget.elements.amount.value;\n  const stepDelay = +e.currentTarget.elements.step.value;\n  delay = +e.currentTarget.elements.delay.value;\n\n  for (let i = 0; i < amount; i++) {\n    createPromise({ position, delay })\n      .then(resolve => {\n        Notify.success(resolve);\n      })\n      .catch(reject => {\n        Notify.failure(reject);\n      });\n    delay += stepDelay;\n    position += 1;\n  }\n  delay = 0;\n  position = 1;\n}\n\nfunction createPromise({ position, delay }) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","document","querySelector","addEventListener","e","preventDefault","amount","currentTarget","elements","value","stepDelay","step","$ce04d3a99e08e73b$var$delay","delay","i","$ce04d3a99e08e73b$var$createPromise","position","$ce04d3a99e08e73b$var$position","then","resolve","Notify","success","catch","reject","failure","param","position1","delay1","Promise","shouldResolve","Math","random","setTimeout","concat"],"version":3,"file":"03-promises.56b32f99.js.map"}