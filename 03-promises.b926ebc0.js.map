{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEeC,SAASC,cAAc,SAC/BC,iBAAiB,UAKxB,SAAsBC,GACpBA,EAAEC,iBACF,MAAMC,EAASF,EAAEG,cAAcC,SAASF,OAAOG,MACzCC,GAAaN,EAAEG,cAAcC,SAASG,KAAKF,MACjDG,GAASR,EAAEG,cAAcC,SAASK,MAAMJ,MAExC,IAAK,IAAIK,EAAI,EAAGA,EAAIR,EAAQQ,IAC1BC,GAAY,EACZH,GAASF,EAaJ,IAAIM,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,GACFF,EAAQ,uBAAqBF,QAAiBH,OAE9CM,EAAK,sBAAoBH,QAAeH,MAAU,GACnDA,EAAM,IAlBNW,MAAKN,IACJlB,EAAAyB,OAAOC,QAAQR,EAAQ,IAExBS,OAAMR,IACLnB,EAAAyB,OAAOG,QAAQT,EAAO,G,IAlB9B,IAAIN,EAAQ,EACRG,EAAW","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onFormSubmit);\n\nlet delay = 0;\nlet position = 0;\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const amount = e.currentTarget.elements.amount.value;\n  const stepDelay = +e.currentTarget.elements.step.value;\n  delay = +e.currentTarget.elements.delay.value;\n\n  for (let i = 0; i < amount; i++) {\n    position += 1;\n    delay += stepDelay;\n\n    createPromise({ position, delay })\n      .then(resolve => {\n        Notify.success(resolve);\n      })\n      .catch(reject => {\n        Notify.failure(reject);\n      });\n  }\n}\n\nfunction createPromise() {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","document","querySelector","addEventListener","e","preventDefault","amount","currentTarget","elements","value","stepDelay","step","$47d4ff9957288465$var$delay","delay","i","$47d4ff9957288465$var$position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.b926ebc0.js.map"}